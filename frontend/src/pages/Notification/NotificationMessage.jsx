import React from 'react';
import { CheckCircle, Clock, XCircle, UserPlus } from 'lucide-react';

//  ÏïåÎ¶º Î©îÏãúÏßÄ (Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ success / error)
export const NOTIFICATION_MESSAGES = {
  member: {
    error: {
      type: 'member',
      title: 'ÌöåÏõê Ï†ÑÏö©',
      description: 'Î°úÍ∑∏Ïù∏ ÌõÑ Ïù¥Ïö©Ìï¥Ï£ºÏÑ∏Ïöî',
    },
  },
  signup: {
    success: {
      type: 'signup',
      title: 'ÌöåÏõêÍ∞ÄÏûÖ ÏÑ±Í≥µ',
      description: 'ÌöåÏõêÍ∞ÄÏûÖÏù¥ ÏôÑÎ£åÎêêÏäµÎãàÎã§.',
    },
    error: {
      type: 'signup',
      title: 'ÌöåÏõêÍ∞ÄÏûÖ Ïã§Ìå®',
    },
  },
  reservation: {
    success: {
      type: 'reservation',
      title: 'ÏòàÏïΩ ÏôÑÎ£å',
      description: 'ÎÇ¥ ÏòàÏïΩ ÌòÑÌô©ÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.',
    },
    error: {
      type: 'reservation',
      title: 'ÏòàÏïΩ Ïã§Ìå®',
    },
    missingFields: {
      type: 'reservation',
      title: 'ÏòàÏïΩ Ïã§Ìå®',
      description: 'ÏûÖÎ†•ÌïòÏßÄ ÏïäÏùÄ ÏòàÏïΩ Ï†ïÎ≥¥Í∞Ä ÏûàÏäµÎãàÎã§.',
    },
    scheduleId_error: {
      type: 'reservation',
      title: 'ÏòàÏïΩ Ïã§Ìå®',
      description: 'ÏÑ†ÌÉùÎêú ÏãúÍ∞ÑÏóê ÏòàÏïΩ Í∞ÄÎä•Ìïú ÏãúÍ∞ÑÏù¥ ÏóÜÏäµÎãàÎã§.',
    }
  },
  extension: {
    success: {
      type: 'extension',
      title: 'ÏòàÏïΩ Ïó∞Ïû• ÏôÑÎ£å',
      description: 'ÎÇ¥ ÏòàÏïΩ ÌòÑÌô©ÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.',
    },
    error: {
      type: 'extension',
      title: 'ÏòàÏïΩ Ïó∞Ïû• Ïã§Ìå®',
    },
  },
  cancellation: {
    success: {
      type: 'cancellation',
      title: 'ÏòàÏïΩ Ï∑®ÏÜå ÏôÑÎ£å',
      description: 'ÏòàÏïΩ ÌòÑÌô©ÏóêÏÑú ÌôïÏù∏ Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§.',
    },
    error: {
      type: 'cancellation',
      title: 'ÏòàÏïΩ Ï∑®ÏÜå Ïã§Ìå®',
    },
  },
  attendance: {
    success: {
      type: 'attendance',
      title: 'Ï∂úÏÑù ÏôÑÎ£å',
      description: 'Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Ï∂úÏÑùÏù¥ ÏôÑÎ£åÎêêÏäµÎãàÎã§.',
    },
    late: {
      type: 'attendance',
      title: 'ÏßÄÍ∞Å Ï≤òÎ¶¨Îê®',
      description: 'Ï∂úÏÑù Í∞ÄÎä• ÏãúÍ∞ÑÏù¥ ÏßÄÎÇ¨ÏäµÎãàÎã§. ÏßÄÍ∞Å Ï≤òÎ¶¨Îê©ÎãàÎã§.'
    },
    notStarted: {
      type: 'attendance',
      title: 'Ï∂úÏÑù Î∂àÍ∞Ä',
    },
    expired: {
      type: 'attendance',
      title: 'Ï∂úÏÑù Î∂àÍ∞Ä',
    },
  },
};



// üîπ Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ ÏïÑÏù¥ÏΩò ÏÑ§Ï†ï
const getIcon = (category) => {
  switch (category) {
    case 'member':
      return <UserPlus className='w-5 h-5' />;
    case 'signup':
      return <UserPlus className="w-5 h-5" />;
    case 'reservation':
      return <CheckCircle className="w-5 h-5" />;
    case 'extension':
      return <Clock className="w-5 h-5" />;
    case 'cancellation':
      return <XCircle className="w-5 h-5" />;
    case 'attendance': // ‚úÖ Ï∂úÏÑù Í¥ÄÎ†® ÏïÑÏù¥ÏΩò
      return <CheckCircle className="w-5 h-5" />;
    default:
      return null;
  }
};

// Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Ïä§ÌÉÄÏùº Ï†ÅÏö© (Î∞∞Í≤ΩÏÉâ & ÌÖçÏä§Ìä∏ ÏÉâÏÉÅ)
const getStyles = (category) => {
  switch (category) {
    case 'member':
      return 'bg-indigo-50 text-indigo-800 border-indigo-200'; // ‚úÖ Îß¥Î≤Ñ Ïä§ÌÉÄÏùº
    case 'signup':
      return 'bg-purple-50 text-purple-800 border-purple-200'; // ‚úÖ ÌöåÏõêÍ∞ÄÏûÖ Ïä§ÌÉÄÏùº
    case 'reservation':
      return 'bg-green-50 text-green-800 border-green-200'; // ‚úÖ ÏòàÏïΩ Ïä§ÌÉÄÏùº
    case 'extension':
      return 'bg-blue-50 text-blue-800 border-blue-200'; // ‚úÖ ÏòàÏïΩ Ïó∞Ïû• Ïä§ÌÉÄÏùº
    case 'cancellation':
      return 'bg-red-50 text-red-800 border-red-200'; // ‚úÖ ÏòàÏïΩ Ï∑®ÏÜå Ïä§ÌÉÄÏùº
    case 'attendance': // ‚úÖ Ï∂úÏÑù Ïä§ÌÉÄÏùº (ÏÉÅÌÉúÎ≥Ñ Îã§Î•¥Í≤å ÏÑ§Ï†ï)
      return 'bg-yellow-50 text-yellow-800 border-yellow-200'; // Í∏∞Î≥∏ Ï∂úÏÑù ÏÑ±Í≥µ
    default:
      return 'bg-gray-50 text-gray-800 border-gray-200';
  }
};

// ‚úÖ Notification Ïª®ÌÖåÏù¥ÎÑà (UI)
export const NotificationContainer = ({ notifications }) => {
  return (
    <div className="fixed bottom-5 left-1/2 transform -translate-x-1/2 w-full max-w-xs space-y-2">
      {notifications.map((notification) => (
        <div
          key={notification.id}
          className={`flex items-center gap-2 px-4 py-3 rounded-lg shadow-lg border transition-all duration-300 ease-in-out ${getStyles(notification.type, notification.status)}`}
        >
          {getIcon(notification.type)}
          <div className="flex flex-col">
            <p className="text-sm font-medium">{notification.title}</p>
            {notification.description && <p className="text-xs">{notification.description}</p>}
          </div>
        </div>
      ))}
    </div>
  );
};


